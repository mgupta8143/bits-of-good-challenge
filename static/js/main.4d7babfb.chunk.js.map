{"version":3,"sources":["components/Tag.tsx","components/Input.tsx","components/TodoList.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Tag","props","index","removeTag","xIncluded","x","className","tagName","onClick","Input","useState","title","dueDate","Date","tagList","completed","info","setInfo","dateChanged","setDateChanged","currentTag","setCurrentTag","addItem","handleChange","event","target","name","val","value","idx","newTagList","splice","id","type","onChange","required","map","errorElement","document","getElementById","style","display","TodoList","todoItems","setTodoItems","dateSort","setDateSort","completionSort","setCompletionSort","handleCompeletion","a","clone","JSON","parse","stringify","parseInt","checked","console","log","toggleDateSort","sort","toggleCompletionSort","sortByCompletion","b","backgroundColor","item","newList","push","toString","val2","idx2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4d7babfb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Tag.css\";\r\n\r\nexport default function Tag(props: any) {\r\n\r\n  const index = props.index;\r\n  const removeTag = props.removeTag;\r\n  const xIncluded = props.x;\r\n\r\n  return (\r\n    <div className=\"tag\">\r\n        {props.tagName}\r\n        {!xIncluded && \r\n        <button className=\"tag-x\" onClick={() => removeTag(index)}>X</button>\r\n        }\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TodoItem } from './TodoList';\r\nimport Tag from './Tag';\r\nimport \"./Input.css\";\r\n\r\nexport default function Input(props: any) {\r\n\r\n    const [info, setInfo] = useState<TodoItem>({\r\n        title: \"\",\r\n        dueDate: new Date(),\r\n        tagList: [],\r\n        completed: false\r\n    });\r\n\r\n    const [dateChanged, setDateChanged] = useState<boolean>(false);\r\n\r\n    const [currentTag, setCurrentTag] = useState<string>(\"\");\r\n\r\n    const addItem = props.addItem;\r\n\r\n    const handleChange = (event: any) => {\r\n      if (event.target.name === \"dueDate\") {\r\n        setDateChanged(true);\r\n      }\r\n       \r\n\r\n\r\n      setInfo(val => ({\r\n        ...val,\r\n        [event.target.name]: event.target.value\r\n      }));\r\n    };\r\n\r\n   \r\n\r\n    const handleCurrentTagChange = (event: any) => {\r\n      setCurrentTag(event.target.value);\r\n    };\r\n\r\n    const addTag = () => {\r\n      setInfo(val => ({\r\n        ...val,\r\n        tagList: [...val.tagList, currentTag]\r\n      }))\r\n      return false;\r\n  \r\n    };\r\n\r\n    const removeTag = (idx: number) => {\r\n      const newTagList = [...info.tagList];\r\n      newTagList.splice(idx, 1);\r\n      setInfo(val => ({\r\n        ...val,\r\n        tagList: newTagList\r\n      }));\r\n    };\r\n\r\n  \r\n\r\n    const submitForm = (event: any) => {\r\n      const errorElement = document.getElementById('error');\r\n\r\n      if(errorElement) {\r\n        if (info.title === \"\" || !dateChanged) {\r\n          errorElement.style.display = \"inline\";\r\n          return;\r\n        }\r\n\r\n        errorElement.style.display = \"none\";\r\n     }\r\n\r\n      addItem(info);\r\n      setInfo({\r\n        title: \"\",\r\n        dueDate: new Date(),\r\n        tagList: [],\r\n        completed: false\r\n      });\r\n      setCurrentTag(\"\");\r\n      setDateChanged(false);\r\n\r\n      \r\n    }\r\n  \r\n    return (\r\n      <div className=\"input-wrapper\">\r\n        <p className=\"error\" id=\"error\">Title and date required</p>\r\n        <form id=\"form-wrap\" className=\"form-wrapper\">\r\n            <div className=\"row-wrapper\">\r\n              <label>Title</label>\r\n              <input \r\n                className=\"styled-input\"\r\n                type=\"text\" \r\n                name=\"title\"\r\n                value={info.title}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row-wrapper\">\r\n              <label>Tags</label>\r\n              <input \r\n                className=\"styled-input\"\r\n                type=\"text\"\r\n                value={currentTag}\r\n                onChange={handleCurrentTagChange}\r\n              />\r\n              <button type=\"button\" className = \"tag-button\" onClick={addTag}>Add</button>\r\n            </div>\r\n\r\n            <div className=\"tag-wrapper\">\r\n              {\r\n                info.tagList.map((val, idx) => {\r\n                  return <Tag \r\n                            key={idx} \r\n                            index = {idx}\r\n                            tagName={val}\r\n                            removeTag = {removeTag}\r\n                         />\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <div className=\"row-wrapper\">\r\n              <label>Date</label>\r\n              <input \r\n                  className=\"styled-input\"\r\n                  name=\"dueDate\"\r\n                  id=\"dateinput\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row-wrapper\">\r\n              <button type=\"button\" onClick={submitForm}>Create</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState } from 'react'\r\nimport Input from './Input';\r\nimport Tag from './Tag';\r\nimport \"./TodoList.css\";\r\n\r\n/**\r\n * Thank you for applying to Bits of Good. You are free to add/delete/modify any \r\n * parts of this project. That includes changing the types.ts, creating css files, \r\n * modifying import statements, using contexts, etc. We do recommend to keep it simple. \r\n * You will not be judged based on complexity. We also recommend using \r\n * multiple components instead of coding everything on this file :)\r\n * \r\n * Have fun! Please reach out to hello@bitsofgood.org or wkim330@gatech.edu if you\r\n * have any questions!\r\n * \r\n * Bits of Good Engineering Team\r\n * \r\n */\r\n// TODO: Start coding from here\r\n\r\n// Here's a baseline todo item type. \r\n// Feel free to extend or create your own interface!\r\nexport type TodoItem = {\r\n  title: string,\r\n  dueDate: Date,\r\n  tagList: string[],\r\n  completed: boolean,\r\n}\r\n\r\n\r\nexport default function TodoList() {\r\n\r\n  let [todoItems, setTodoItems] = useState<TodoItem[]>([]);\r\n\r\n  let [dateSort, setDateSort] = useState<boolean>();\r\n  let [completionSort, setCompletionSort] = useState<boolean>();\r\n\r\n  const addToDoItem = (item: TodoItem) => {\r\n    setTodoItems(val => {\r\n      const newList = [...todoItems];\r\n      newList.push(item);\r\n      return newList;\r\n    })\r\n    console.log(todoItems);\r\n\r\n  };\r\n\r\n  const handleCompeletion = async (event: any) => {\r\n    await setTodoItems(val => {\r\n      let clone = JSON.parse(JSON.stringify(val));\r\n      clone[parseInt(event.target.name)].completed = event.target.checked;\r\n      return clone;\r\n    })\r\n    console.log(todoItems);\r\n  };\r\n\r\n  const toggleDateSort = async () => {\r\n    await setDateSort(val => !val);\r\n    sort();\r\n  }\r\n\r\n  const toggleCompletionSort = async () => {\r\n    await setCompletionSort(val => !val);\r\n    sortByCompletion();\r\n\r\n  }\r\n\r\n  const sortByDate = () => {\r\n    setTodoItems(val => {\r\n      let clone = JSON.parse(JSON.stringify(val));\r\n      clone.sort((a: TodoItem, b: TodoItem) => {\r\n        if (a.dueDate > b.dueDate) return 1;\r\n        if (a.dueDate < b.dueDate) return -1;\r\n        return 0;\r\n      });\r\n      return clone;\r\n    })\r\n  }\r\n\r\n  const sortByCompletion = () => {\r\n    console.log(\"YES\");\r\n    setTodoItems(val => {\r\n      let clone = JSON.parse(JSON.stringify(val));\r\n      clone.sort((a: TodoItem, b: TodoItem) => {\r\n        if (a.completed) return 1;\r\n        if (b.completed) return -1;\r\n        return 0;\r\n      });\r\n      return clone;\r\n    })\r\n  }\r\n\r\n  const sortByCompletionThenDate = () => {\r\n    console.log(\"YES\");\r\n    setTodoItems(val => {\r\n      let clone = JSON.parse(JSON.stringify(val));\r\n      clone.sort((a: TodoItem, b: TodoItem) => {\r\n        if (a.completed && !b.completed) {\r\n          return 1;\r\n        } else if (!a.completed && b.completed) {\r\n          return -1;\r\n        } else {\r\n          if (a.dueDate > b.dueDate) return 1;\r\n          if (a.dueDate < b.dueDate) return -1;\r\n          return 0;\r\n        }\r\n      });\r\n      return clone;\r\n    })\r\n  }\r\n\r\n\r\n  const sort = () => {\r\n    if (!dateSort) {\r\n      console.log(\"No\");\r\n      sortByDate();\r\n    } else if (completionSort) {\r\n      console.log(\"Yes\");\r\n      sortByCompletion();\r\n    } else {\r\n      \r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"todo-wrapper\">\r\n      <div className=\"shadow-wrapper\">\r\n        <h1 className=\"title\"style={{backgroundColor: 'white'}}>Todo List</h1>\r\n        <Input\r\n            addItem = {addToDoItem}\r\n          />\r\n      </div>\r\n\r\n      <div className=\"list-wrapper\">\r\n        <button style={{backgroundColor: dateSort ? \"green\" : \"red\"}} onClick={toggleDateSort}>Sort by Date</button>\r\n        <button style={{backgroundColor: completionSort ? \"green\" : \"red\"}} onClick={toggleCompletionSort}>Sort by Completion</button>\r\n        {\r\n          todoItems.map((val, idx) => {\r\n            return (\r\n              <div key={idx} className=\"todo-item\">\r\n                <input type=\"checkbox\" \r\n                       id={idx.toString()}\r\n                       name={idx.toString()}\r\n                       className=\"check-box\"\r\n                       onChange={handleCompeletion}\r\n                       checked={val.completed}\r\n                />\r\n\r\n                <div className=\"title-and-tags\">\r\n                  <h2 className=\"item-title\">{val.title}</h2>\r\n                  <div className=\"tag-item-wrapper\">\r\n                  {\r\n                    todoItems[idx].tagList.map((val2, idx2) => {\r\n                      return <Tag \r\n                            key={idx2} \r\n                            index = {idx2}\r\n                            tagName={val2}\r\n                            x={true}\r\n                         />\r\n                    })\r\n                  }\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"date\">\r\n                   By {val.dueDate}\r\n                </div>\r\n\r\n\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodoList/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}